using UnityEngine;

public class YSJ_Invetory : MonoBehaviour
{
    // 인벤토리 기능
    // 1. 아이템 전체 리스트를 들고 있는다.
    // 2. 아이템을 전체 리스트에 추가할 수 있다.
    // 3. 아이템을 전체 리스트에서 선택 제거 할 수 있다.
    // 4. 아이템이 존재 하는지 여부를 확인 할 수 있다.
    // 인벤토리 개발 시, 고려사항
    // 1. 멀티 게임이니, 각 게임 플레이어한테 존재 해야된다.
    // 2. 해당 스크립트는 모노를 상속해서, 인스펙터에서 확인하게 한다.(왜 필요할까?)

    // 아이템 
    // 1. 데이터를 담는 하나의 데이터 저장 객체이다.
    // 고려 사항
    // 1. 주어지는 데이터의 값등에 따라서, 파싱이 필요로하다.
    // 2. 기존 구조에서는 `ItemBase`를 만들어서 프리팹으로 관리를 진행한다.
    // 장단점
    // > 장점
    // 1. 프리팹으로 관리를 진행하여서 개발할 때 편리하다.
    // 2. 버전 관리하기 편하다.
    // > 단점
    // 1. 단순 데이터를 들고 있는 객체가 아니다.
    // 그래서 고려사항이 늘어난다. 우회하는 방법으로 접근이 필요하다.
    // 2. 현재 프리팹으로 데이터를 직접 프리팹화하고 직접 생성, 직접 접근을 하다 보니
    // 빌드 또는 예기치 못하게 데이터 변형이 일어났을 때 문제가 발생한다.

    // 인벤토리 슬롯
    // 1. 아이템 매니저, 인벤토리를 초기 데이터로 받습니다.
    // 2. 슬롯에 아이템 베이스를 넣어 가지고 있는 아이템의 정보를 띄어준다.
    // 3. 슬롯 닫쳤을 때에 대한 처리
    // 4. 아이템 슬롯이 클릭이 되었을 때 처리를 진행한다.
}
